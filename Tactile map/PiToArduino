#include <AccelStepper.h>

// Pins for X and Y stepper motors
#define X_STEP_PIN 2
#define X_DIR_PIN 5
#define Y_STEP_PIN 3
#define Y_DIR_PIN 6

AccelStepper stepperX(AccelStepper::DRIVER, X_STEP_PIN, X_DIR_PIN);
AccelStepper stepperY(AccelStepper::DRIVER, Y_STEP_PIN, Y_DIR_PIN);

// Steps per mm â€” adjust to your setup!
const float steps_per_mm_x = 80;  // Example: 17mm * 80 = 1360 steps for 1 grid cell
const float steps_per_mm_y = 80;  // Example: 15mm * 80 = 1200 steps for 1 grid cell

void setup() {
  Serial.begin(115200);
  stepperX.setMaxSpeed(1000);
  stepperY.setMaxSpeed(1000);
  stepperX.setAcceleration(800);
  stepperY.setAcceleration(800);
  Serial.println("Ready for G-code...");
}

void loop() {
  if (Serial.available()) {
    String gcode = Serial.readStringUntil('\n');
    gcode.trim();

    if (gcode.startsWith("G0")) {
      float targetX = 0, targetY = 0;
      int xIndex = gcode.indexOf('X');
      int yIndex = gcode.indexOf('Y');

      if (xIndex > 0) targetX = gcode.substring(xIndex + 1, yIndex > 0 ? yIndex : gcode.length()).toFloat();
      if (yIndex > 0) targetY = gcode.substring(yIndex + 1).toFloat();

      long xSteps = targetX * steps_per_mm_x;
      long ySteps = targetY * steps_per_mm_y;

      stepperX.moveTo(xSteps);
      stepperY.moveTo(ySteps);

      while (stepperX.isRunning() || stepperY.isRunning()) {
        stepperX.run();
        stepperY.run();
      }

      Serial.println("Move complete");
    }
  }
}
